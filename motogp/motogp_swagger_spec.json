{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "MotoGP",
        "termsOfService": "https://gouthamshiv.github.io/mit-license/",
        "contact": {
            "email": "goutham.s.shivanna@gmail.com",
            "name": "Goutham",
            "url": "https://goutham-shivanna.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://gouthamshiv.github.io/mit-license/"
        },
        "description": "This is a collection of APIs created for a MotoGP mini app for https://webstash.in"
    },
    "servers": [
        {
            "url": "https://api.webstash.in/motogp"
        }
    ],
    "tags": [
        {
            "name": "riders",
            "description": "MotoGP riders data",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://motogp.webstash.in/rider"
            }
        },
        {
            "name": "race",
            "description": "Access to MotoGP race data"
        },
        {
            "name": "seasons",
            "description": "Info about all available seasons"
        }
    ],
    "paths": {
        "/seasons": {
            "get": {
                "tags": ["seasons"],
                "summary": "Get all available seasons",
                "operationId": "getSeasons",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Seasons"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Seasons"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No seasons found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "webstash": ["read:motogp"]
                    }
                ]
            }
        },
        "/rider": {
            "get": {
                "tags": ["riders"],
                "summary": "Get all rider details",
                "operationId": "getRiders",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Rider"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Rider"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No riders found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "webstash": ["read:motogp"]
                    }
                ]
            }
        },
        "/rider/findByNumber": {
            "get": {
                "tags": ["riders"],
                "summary": "Find riders by their number",
                "description": "Find the rider by their number, multiple rider results might be returned",
                "operationId": "findRidersByNumber",
                "parameters": [
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Rider number to filter by",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Rider"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Rider"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid number value"
                    },
                    "404": {
                        "description": "No riders found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "webstash": ["read:motogp"]
                    }
                ]
            }
        },
        "/rider/findByYear": {
            "get": {
                "tags": ["riders"],
                "summary": "Get all rider details for a particular season",
                "operationId": "findRidersByYear",
                "parameters": [
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Year to filter by",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Rider"
                                    }
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Rider"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid year value"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "No riders found"
                    }
                },
                "security": [
                    {
                        "webstash": ["read:motogp"]
                    }
                ]
            }
        },
        "/rider/{riderId}": {
            "get": {
                "tags": ["riders"],
                "summary": "Find rider by ID",
                "description": "Returns rider with requested ID",
                "operationId": "getRiderById",
                "parameters": [
                    {
                        "name": "riderId",
                        "in": "path",
                        "description": "ID of rider to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Rider"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Rider"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Rider not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "webstash": ["read:motogp"]
                    }
                ]
            },
            "post": {
                "tags": ["riders"],
                "summary": "Add a rider to the database",
                "operationId": "addRider",
                "parameters": [
                    {
                        "name": "riderId",
                        "in": "path",
                        "description": "ID of rider that needs to be added",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Rider"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "405": {
                        "description": "Invalid input"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "webstash": ["write:motogp", "read:motogp"]
                    }
                ]
            },
            "delete": {
                "tags": ["riders"],
                "summary": "Deletes a rider",
                "operationId": "deleteRider",
                "parameters": [
                    {
                        "name": "riderId",
                        "in": "path",
                        "description": "Rider id to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Rider not found"
                    }
                },
                "security": [
                    {
                        "webstash": [
                            "admin:true",
                            "write:motogp",
                            "read:motogp"
                        ]
                    }
                ]
            }
        },
        "/user": {
            "post": {
                "tags": ["user"],
                "summary": "Create user",
                "description": "This can only be done by the ADMIN user.",
                "operationId": "createUser",
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "description": "Created user object",
                    "required": true
                },
                "security": [
                    {
                        "webstash": ["admin:true"]
                    }
                ]
            }
        },
        "/user/login": {
            "get": {
                "tags": ["user"],
                "summary": "Logs user into the system",
                "operationId": "loginUser",
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "The user name for login",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The password for login in clear text",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "headers": {
                            "X-Rate-Limit": {
                                "description": "calls per hour allowed by the user",
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "X-Expires-After": {
                                "description": "date in UTC when token expires",
                                "schema": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username/password supplied"
                    }
                }
            }
        },
        "/user/logout": {
            "get": {
                "tags": ["user"],
                "summary": "Logs out current logged in user session",
                "operationId": "logoutUser",
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/user/{username}": {
            "get": {
                "tags": ["user"],
                "summary": "Get user by user name",
                "operationId": "getUserByName",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The name that needs to be fetched. Use user1 for testing.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "webstash": ["admin:true"]
                    }
                ]
            }
        }
    },
    "externalDocs": {
        "description": "Find out more",
        "url": "https://motogp.webstash.in"
    },
    "components": {
        "schemas": {
            "Seasons": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "year": {
                        "type": "string",
                        "pattern": "^20\\d{2}$",
                        "example": "2020",
                        "default": "2020"
                    },
                    "current": {
                        "type": "boolean",
                        "default": true
                    }
                }
            },
            "Country": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "iso": {
                        "type": "string",
                        "pattern": "^[A-Z]{2}$",
                        "example": "ES"
                    },
                    "country": {
                        "type": "string",
                        "example": "Spain"
                    }
                }
            },
            "Rider": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "riderId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "surname": {
                        "type": "string"
                    },
                    "nickname": {
                        "type": "string"
                    },
                    "country": {
                        "type": "object",
                        "$ref": "#/components/schemas/Country"
                    },
                    "team": {
                        "type": "object",
                        "$ref": "#/components/schemas/Team"
                    },
                    "short_nickname": {
                        "type": "string"
                    },
                    "dob": {
                        "type": "string",
                        "format": "date",
                        "example": "2020-01-30",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
                    },
                    "birth_city": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean",
                        "default": true
                    },
                    "pictures": {
                        "type": "object",
                        "$ref": "#/components/schemas/Pictures"
                    },
                    "active_seasons": {
                        "type": "object",
                        "$ref": "#/components/schemas/Seasons"
                    }
                },
                "xml": {
                    "name": "Rider"
                }
            },
            "Team": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "constructor": {
                        "$ref": "#/components/schemas/Constructor"
                    },
                    "color": {
                        "type": "string",
                        "description": "Hexadecimal representation of a color",
                        "example": "#ffffff"
                    },
                    "text_color": {
                        "type": "string",
                        "description": "Hexadecimal representation of a color",
                        "example": "#ffffff"
                    },
                    "picture": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "xml": {
                    "name": "Category"
                }
            },
            "Constructor": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "Constructor"
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "uuid"
                    },
                    "username": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "userStatus": {
                        "type": "integer",
                        "format": "int32",
                        "description": "User Status"
                    }
                },
                "xml": {
                    "name": "User"
                }
            },
            "Pictures": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "rider": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "profile": {
                        "type": "string",
                        "format": "uri"
                    },
                    "bike": {
                        "type": "string",
                        "format": "uri"
                    },
                    "number": {
                        "type": "string",
                        "format": "uri"
                    },
                    "helmet": {
                        "type": "string",
                        "format": "uri"
                    },
                    "portrait": {
                        "type": "string",
                        "format": "uri"
                    }
                },
                "xml": {
                    "name": "Pictures"
                }
            }
        },
        "securitySchemes": {
            "webstash": {
                "type": "oauth2",
                "flows": {
                    "implicit": {
                        "authorizationUrl": "https://YET-TO-IMPLEMENT",
                        "scopes": {
                            "write:motogp": "Allows access to GET, PUT, POST requests for motogp APIs",
                            "read:motogp": "Allows access to GET requests for motogp APIs",
                            "admin:true": "Allows access to all operations"
                        }
                    }
                }
            }
        }
    }
}
